name: Poetry Build

on: [workflow_call]

jobs:
  # check_conditions:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     rules_matched: ${{ steps.check.outputs.result }}
  #   steps:
  #     - id: check
  #       run: |
  #         if [[ "${{ github.event_name }}" == 'push' && -n "${{ github.event.pull_request }}" ]]; then
  #           echo "result=true" >> $GITHUB_OUTPUT
  #         else
  #           echo "result=false" >> $GITHUB_OUTPUT
  #         fi
  #     - run: echo "Result in check_conditions is ${{ steps.check.outputs.result }}"
  check_conditions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Check Conditions Action
        id: check_conditions
        uses: ./.github/actions/check-conditions-action
        
  semver_tag:
    uses: ./.github/workflows/common-parts.yml
    # outputs:
    #   semver_tag_matched: ${{ jobs.semver_tag.outputs.semver_tag_matched }}

  docs:
    # runs-on: ubuntu-latest
    needs: check_conditions    
    # if: needs.check_conditions.outputs.rules_matched == 'true'
    runs-on: ubuntu-latest    
    # needs: install_poetry
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: echo "Data is ${{ env.rules_matched }}"
      - uses: ./.github/actions/check-conditions-action
        id: check_conditions_action

      - name: Use the result
        run: | 
          echo "The version is ${{ steps.check_conditions_action.outputs.rules_matched }}"
          echo "Rules Matched: ${{ steps.check_conditions_action.outputs.rules_matched }}"
      # - run: echo "Data is ${{ needs.check_conditions.outputs.rules_matched }}"
      # - run: echo "Data is ${{ needs.check_conditions.outputs.workflow_rules.rules_matched }}"
      # - run: echo "Data is ${{ needs.check_conditions.outputs.workflow_rules }}"
      # - run: echo "semver_tag Data is ${{ needs.semver_tag.outputs.semver_tag_rule.rules_matched }}"
      # - run: echo "semver_tag Data is ${{ needs.semver_tag.outputs.semver_tag_rule }}"
      # - run: echo " Data is  ${{ needs.check_conditions.outputs.rules_matched }}"

      
      # - name: Checkout code
      #   uses: actions/checkout@v2

      # - name: Install Python and Poetry
      #   id: poetry_installation
      #   uses: ./.github/action/install-poetry
      #   with:
      #     python_version: $PYTHON_VERSION

      # - name: Use Poetry
      #   run: echo ${{ steps.poetry_installation.outputs.poetry_path }}

      # - name: Install Poetry and Docs Dependencies
      #   run: |
      #     ${{ steps.poetry_installation.outputs.poetry_path }}/poetry install --without dev --with docs

  # tests:
  #   # runs-on: ubuntu-latest
  #   needs: check_conditions
  #   if: needs.check_conditions.outputs.rules_matched == 'true'
  #   uses: ./.github/workflows/poetry-parts.yml
  #   with:
  #     job: test_poetry_script
  #     PYPI_USERNAME: PYPI_USERNAME
  #     PYPI_TOKEN: PYPI_TOKEN
  #     PYTHON_VERSION: 1

  # build_linux_x86_64:
  #   # runs-on: ubuntu-latest
  #   needs: check_conditions
  #   if: needs.check_conditions.outputs.rules_matched == 'true'
  #   uses: ./.github/workflows/poetry-parts.yml
  #   with:
  #     job: build_poetry_script
  #     PYPI_USERNAME: PYPI_USERNAME
  #     PYPI_TOKEN: PYPI_TOKEN
  #     PYTHON_VERSION: 1

  # deploy_linux:
  #   # runs-on: ubuntu-latest
  #   needs: [build_linux_x86_64]
  #   if: needs.check_conditions.outputs.rules_matched == 'true'
  #   uses: ./.github/workflows/poetry-parts.yml
  #   with:
  #     PYPI_USERNAME: PYPI_USERNAME
  #     PYPI_TOKEN: PYPI_TOKEN
  #     PYTHON_VERSION: 1
  #     job: deploy_poetry_script
